import{initializeApp as k}from"https://www.gstatic.com/firebasejs/11.6.1/firebase-app.js";import{getAuth as v,onAuthStateChanged as w,signInWithCustomToken as x,signInAnonymously as u}from"https://www.gstatic.com/firebasejs/11.6.1/firebase-auth.js";import{getFirestore as _,collection as C,query as b,onSnapshot as E,addDoc as A,serverTimestamp as L,doc as $,updateDoc as I,deleteDoc as T}from"https://www.gstatic.com/firebasejs/11.6.1/firebase-firestore.js";(function(){const o=document.createElement("link").relList;if(o&&o.supports&&o.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))n(e);new MutationObserver(e=>{for(const t of e)if(t.type==="childList")for(const s of t.addedNodes)s.tagName==="LINK"&&s.rel==="modulepreload"&&n(s)}).observe(document,{childList:!0,subtree:!0});function i(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerPolicy&&(t.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?t.credentials="include":e.crossOrigin==="anonymous"?t.credentials="omit":t.credentials="same-origin",t}function n(e){if(e.ep)return;e.ep=!0;const t=i(e);fetch(e.href,t)}})();const p=typeof __app_id<"u"?__app_id:"default-app-id",O=typeof __firebase_config<"u"?JSON.parse(__firebase_config):{apiKey:"YOUR_API_KEY",authDomain:"...",projectId:"..."},f=typeof __initial_auth_token<"u"?__initial_auth_token:null,h=k(O),a=v(h),m=_(h),B=document.getElementById("add-task-form"),g=document.getElementById("task-input"),c=document.getElementById("task-list"),l=document.getElementById("loading-state");w(a,r=>{r?M(r.uid):f?x(a,f).catch(o=>{console.error("Custom token sign-in failed:",o),u(a)}):u(a).catch(o=>{console.error("Anonymous sign-in failed:",o),l.textContent="Could not connect. Please refresh."})});function M(r){const o=C(m,`artifacts/${p}/users/${r}/tasks`),i=b(o);E(i,n=>{const e=[];n.forEach(t=>{e.push({id:t.id,...t.data()})}),e.sort((t,s)=>t.completed!==s.completed?t.completed?1:-1:(s.createdAt?.seconds||0)-(t.createdAt?.seconds||0)),P(e)},n=>{console.error("Error fetching tasks: ",n),l.textContent="Failed to load tasks."}),B.addEventListener("submit",async n=>{n.preventDefault();const e=g.value.trim();if(e)try{await A(o,{text:e,completed:!1,createdAt:L()}),g.value=""}catch(t){console.error("Error adding task: ",t),alert("Could not add task. Please try again.")}}),c.addEventListener("click",async n=>{const e=n.target.closest("button");if(!e)return;const t=e.dataset.id;if(!t)return;const s=$(m,`artifacts/${p}/users/${r}/tasks/${t}`);if(e.dataset.action==="toggle-complete"){const d=e.dataset.completed==="true";try{await I(s,{completed:!d})}catch(y){console.error("Error updating task: ",y)}}if(e.dataset.action==="delete")try{await T(s)}catch(d){console.error("Error deleting task: ",d)}})}function P(r){c.innerHTML="",r.length===0?(l.textContent="No tasks yet. Add one above!",c.appendChild(l)):r.forEach(o=>{const i=document.createElement("div");i.className=`task-item flex items-center justify-between p-4 bg-slate-50 rounded-lg shadow-sm transition ${o.completed?"opacity-60":""}`;const n=o.completed?"line-through text-slate-500":"text-slate-800";i.innerHTML=`
                        <p class="flex-grow ${n}">${D(o.text)}</p>
                        <div class="flex-shrink-0 flex items-center gap-2 ml-4">
                            <button data-id="${o.id}" data-action="toggle-complete" data-completed="${o.completed}" class="p-2 rounded-full hover:bg-slate-200 focus:outline-none focus:ring-2 focus:ring-green-500 transition">
                                ${o.completed?'<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" class="text-green-600" stroke-linecap="round" stroke-linejoin="round"><path d="M22 11.08V12a10 10 0 1 1-5.93-9.14"></path><polyline points="22 4 12 14.01 9 11.01"></polyline></svg>':'<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" class="text-slate-400" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="10"></circle></svg>'}
                            </button>
                            <button data-id="${o.id}" data-action="delete" class="p-2 rounded-full hover:bg-slate-200 focus:outline-none focus:ring-2 focus:ring-red-500 transition">
                                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" class="text-red-500" stroke-linecap="round" stroke-linejoin="round"><polyline points="3 6 5 6 21 6"></polyline><path d="M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2"></path><line x1="10" y1="11" x2="10" y2="17"></line><line x1="14" y1="11" x2="14" y2="17"></line></svg>
                            </button>
                        </div>
                    `,c.appendChild(i)})}function D(r){const o=document.createElement("p");return o.textContent=r,o.innerHTML}
